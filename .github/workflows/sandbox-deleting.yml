name: Trigger Sandbox Deletion

on:
  pull_request:
    types:
      - closed

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  trigger-sandbox-deletion-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Validate environment variables
        run: |
          if [ -z "${{ env.AWS_REGION }}" ]; then
            echo "::error::AWS_REGION variable is not set"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{vars.PROD_AWS_ACCOUNT_ID}}:role/sandbox-deletion-trigger-role
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Get PR Number
        id: get_pr_number
        run: |
          RATE_LIMIT=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/rate_limit")
          REMAINING=$(echo "$RATE_LIMIT" | jq .rate.remaining)
          if [ "$REMAINING" -lt 10 ]; then
            echo "::warning::GitHub API rate limit is low: $REMAINING requests remaining"
          fi

          PR_NUMBER=$(curl -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:${GITHUB_REF_NAME}" | jq -r '.[0].number')
          echo "PR_NUMBER=$PR_NUMBER"
          if [ -z "$PR_NUMBER" ]; then
            echo "PR_NUMBER not found for branch ${BRANCH_NAME}"
            exit 1
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_WITH_REPO_PERMISSIONS }}

      - name: trigger sandbox deletion pipeline
        run: |
          PR_NUMBER="${{ env.PR_NUMBER }}"
          if ! aws codepipeline start-pipeline-execution \
            --name "sandbox-deletion" \
            --variables \
              "name=BRANCH_NAME,value=${BRANCH_NAME}" \
              "name=PR_NUMBER,value=${PR_NUMBER}" \
              "name=IS_PULL_REQUEST,value=0"; then
            echo "::error::Failed to start pipeline execution"
            exit 1
          fi
